# Microsoft 365 Management Tools - Production Environment Template
# Copy this file to .env.production and fill in your actual values
# IMPORTANT: Never commit actual credentials to version control

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================
ENVIRONMENT=production
LOG_LEVEL=info
DEBUG=false

# Application secrets (REQUIRED - Generate secure random values)
SECRET_KEY=your-secret-key-here-min-32-chars
JWT_SECRET_KEY=your-jwt-secret-key-here-min-32-chars
ENCRYPTION_KEY=your-encryption-key-here-base64-encoded

# =============================================================================
# MICROSOFT 365 / AZURE CONFIGURATION
# =============================================================================
# Microsoft Graph API (REQUIRED)
MICROSOFT_TENANT_ID=your-tenant-id-here
MICROSOFT_CLIENT_ID=your-client-id-here
MICROSOFT_CLIENT_SECRET=your-client-secret-here

# Azure Monitor & Application Insights (OPTIONAL but recommended)
AZURE_MONITOR_CONNECTION_STRING=InstrumentationKey=your-key-here
LOG_ANALYTICS_WORKSPACE_ID=your-workspace-id-here

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL Database (REQUIRED)
POSTGRES_PASSWORD=your-secure-postgres-password
DATABASE_URL=postgresql://m365user:${POSTGRES_PASSWORD}@postgres:5432/microsoft365_tools
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=30

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
# Redis Cache (REQUIRED)
REDIS_PASSWORD=your-secure-redis-password
REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
REDIS_POOL_SIZE=10

# =============================================================================
# SSL/TLS CERTIFICATES
# =============================================================================
# Let's Encrypt ACME configuration
ACME_EMAIL=admin@your-domain.com

# Domain configuration
DOMAIN=your-domain.com
API_DOMAIN=api.microsoft365tools.${DOMAIN}
GRAFANA_DOMAIN=grafana.microsoft365tools.${DOMAIN}
PROMETHEUS_DOMAIN=prometheus.microsoft365tools.${DOMAIN}
TRAEFIK_DOMAIN=traefik.microsoft365tools.${DOMAIN}
ALERTMANAGER_DOMAIN=alertmanager.microsoft365tools.${DOMAIN}

# =============================================================================
# BACKUP & DISASTER RECOVERY
# =============================================================================
# AWS S3 Backup Storage (OPTIONAL)
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-east-1
BACKUP_S3_BUCKET=your-backup-bucket-name

# Azure Blob Storage Backup (OPTIONAL)
AZURE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=https;AccountName=youraccount;AccountKey=yourkey;EndpointSuffix=core.windows.net
BACKUP_AZURE_CONTAINER=backups

# Backup Schedule (Cron format)
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30

# =============================================================================
# MONITORING & ALERTING
# =============================================================================
# Grafana Dashboard
GRAFANA_PASSWORD=your-secure-grafana-password

# Traefik Dashboard Authentication (format: user:bcrypt_hash)
TRAEFIK_USERS=admin:$$2y$$10$$example-bcrypt-hash

# Prometheus Configuration
PROMETHEUS_RETENTION_DAYS=30

# =============================================================================
# NOTIFICATION CHANNELS
# =============================================================================
# Email Alerts (OPTIONAL but recommended)
SMTP_HOST=smtp.your-email-provider.com
SMTP_PORT=587
SMTP_USERNAME=alerts@your-domain.com
SMTP_PASSWORD=your-email-password
ALERT_FROM_EMAIL=alerts@your-domain.com
ALERT_TO_EMAILS=admin@your-domain.com,ops@your-domain.com

# Microsoft Teams Notifications (OPTIONAL)
TEAMS_WEBHOOK_URL=https://your-teams-webhook-url

# Slack Notifications (OPTIONAL)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/slack/webhook

# =============================================================================
# PERFORMANCE & SCALING
# =============================================================================
# Application Workers
WORKERS=4
MAX_REQUESTS=1000
MAX_REQUESTS_JITTER=50
TIMEOUT=120
KEEPALIVE=2

# Rate Limiting
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_BURST=100

# Connection Pools
CONNECTION_POOL_SIZE=20
CONNECTION_POOL_MAX_OVERFLOW=30

# =============================================================================
# SECURITY SETTINGS
# =============================================================================
# Allowed hosts/origins (comma-separated)
ALLOWED_HOSTS=your-domain.com,api.microsoft365tools.your-domain.com
ALLOWED_ORIGINS=https://your-domain.com,https://api.microsoft365tools.your-domain.com

# Session Security
SESSION_TIMEOUT_HOURS=8
JWT_EXPIRATION_HOURS=1
REFRESH_TOKEN_EXPIRATION_DAYS=30

# API Rate Limiting
API_RATE_LIMIT_PER_HOUR=1000
API_RATE_LIMIT_BURST=50

# =============================================================================
# DEVELOPMENT & TESTING OVERRIDES
# =============================================================================
# Set to true only for development/testing environments
SKIP_AUTH=false
SKIP_RATE_LIMITING=false
ENABLE_DEBUG_ENDPOINTS=false

# =============================================================================
# DEPLOYMENT METADATA
# =============================================================================
# These are typically set by CI/CD pipelines
VERSION=3.0.0
BUILD_DATE=2025-01-19T00:00:00Z
GIT_COMMIT=latest

# =============================================================================
# INSTRUCTIONS
# =============================================================================
# 1. Copy this file to .env.production
# 2. Replace all placeholder values with your actual configuration
# 3. Generate secure random values for all secret keys
# 4. Configure your Microsoft 365 app registration
# 5. Set up SSL certificates for your domain
# 6. Configure backup storage (AWS S3 or Azure Blob)
# 7. Set up monitoring and alerting channels
# 8. Test the configuration in a staging environment first
# 9. Never commit .env.production to version control
# 10. Backup your .env.production file securely

# =============================================================================
# SECURITY NOTES
# =============================================================================
# - All secret values should be generated using cryptographically secure methods
# - Use environment-specific values (don't reuse between dev/staging/prod)
# - Rotate secrets regularly
# - Use Azure Key Vault or AWS Secrets Manager for production secrets
# - Enable audit logging for all configuration changes
# - Regularly review and update security settings