# Microsoft 365 Management Tools - Production Makefile
# Enterprise-grade build, test, and deployment automation

.PHONY: help build test deploy clean install setup docker k8s

# Default target
.DEFAULT_GOAL := help

# Project configuration
PROJECT_NAME := microsoft365-tools
VERSION := $(shell git describe --tags --always --dirty 2>/dev/null || echo "dev")
COMMIT_SHA := $(shell git rev-parse --short HEAD 2>/dev/null || echo "unknown")
BUILD_DATE := $(shell date -u +"%Y-%m-%dT%H:%M:%SZ")

# Container configuration
REGISTRY := ghcr.io/microsoft365-tools
IMAGE_NAME := $(PROJECT_NAME)
FULL_IMAGE := $(REGISTRY)/$(IMAGE_NAME):$(VERSION)

# Kubernetes configuration
NAMESPACE := microsoft-365-tools
DEPLOYMENT_NAME := m365-tools-deployment

# Environment detection
ENVIRONMENT ?= development
ifeq ($(CI),true)
    ENVIRONMENT := ci
endif

# Python configuration
PYTHON := python3
PIP := pip3
VENV_DIR := venv
REQUIREMENTS := requirements.txt

# Colors for output
RED := \033[0;31m
GREEN := \033[0;32m
YELLOW := \033[1;33m
BLUE := \033[0;34m
NC := \033[0m

##@ Help

help: ## Display this help
	@echo "$(GREEN)Microsoft 365 Management Tools - Build System$(NC)"
	@echo "=============================================="
	@echo ""
	@echo "$(BLUE)Version:$(NC) $(VERSION)"
	@echo "$(BLUE)Environment:$(NC) $(ENVIRONMENT)"
	@echo "$(BLUE)Registry:$(NC) $(REGISTRY)"
	@echo ""
	@awk 'BEGIN {FS = ":.*##"; printf "\nUsage:\n  make \033[36m<target>\033[0m\n"} /^[a-zA-Z_0-9-]+:.*?##/ { printf "  \033[36m%-15s\033[0m %s\n", $$1, $$2 } /^##@/ { printf "\n\033[1m%s\033[0m\n", substr($$0, 5) } ' $(MAKEFILE_LIST)

##@ Development

setup: ## Setup development environment
	@echo "$(GREEN)Setting up development environment...$(NC)"
	$(PYTHON) -m venv $(VENV_DIR)
	$(VENV_DIR)/bin/pip install --upgrade pip setuptools wheel
	$(VENV_DIR)/bin/pip install -r $(REQUIREMENTS)
	$(VENV_DIR)/bin/pip install -r requirements-dev.txt 2>/dev/null || true
	@echo "$(GREEN)✅ Development environment setup complete$(NC)"
	@echo "$(YELLOW)Activate with: source $(VENV_DIR)/bin/activate$(NC)"

install: ## Install project dependencies
	@echo "$(GREEN)Installing dependencies...$(NC)"
	$(PIP) install --upgrade pip setuptools wheel
	$(PIP) install -r $(REQUIREMENTS)
	$(PIP) install -e .
	@echo "$(GREEN)✅ Dependencies installed$(NC)"

##@ Testing

test: ## Run all tests
	@echo "$(GREEN)Running test suite...$(NC)"
	pytest Tests/ -v --tb=short --cov=src --cov-report=html --cov-report=term-missing

##@ Docker

docker-build: ## Build Docker image
	@echo "$(GREEN)Building Docker image: $(FULL_IMAGE)$(NC)"
	docker build \
		--build-arg BUILD_DATE="$(BUILD_DATE)" \
		--build-arg VERSION="$(VERSION)" \
		--build-arg VCS_REF="$(COMMIT_SHA)" \
		-f Dockerfile.production \
		-t $(FULL_IMAGE) \
		-t $(REGISTRY)/$(IMAGE_NAME):latest \
		.
	@echo "$(GREEN)✅ Docker image built: $(FULL_IMAGE)$(NC)"

docker-push: docker-build ## Push Docker image to registry
	@echo "$(GREEN)Pushing Docker image to registry...$(NC)"
	docker push $(FULL_IMAGE)
	docker push $(REGISTRY)/$(IMAGE_NAME):latest
	@echo "$(GREEN)✅ Docker image pushed$(NC)"

##@ Kubernetes

k8s-deploy: ## Deploy to Kubernetes
	@echo "$(GREEN)Deploying to Kubernetes...$(NC)"
	./scripts/kubernetes/deploy.sh --tag $(VERSION) --environment $(ENVIRONMENT)

k8s-deploy-production: ## Deploy to production environment
	@echo "$(GREEN)Deploying to production...$(NC)"
	./scripts/kubernetes/deploy.sh --tag $(VERSION) --environment production --force

k8s-status: ## Check Kubernetes deployment status
	@echo "$(GREEN)Checking deployment status...$(NC)"
	kubectl get deployments,pods,services -n $(NAMESPACE) -l app=m365-tools
	kubectl rollout status deployment/$(DEPLOYMENT_NAME) -n $(NAMESPACE)

##@ Utilities

version: ## Show version information
	@echo "$(GREEN)Version Information:$(NC)"
	@echo "  Version: $(VERSION)"
	@echo "  Commit: $(COMMIT_SHA)"
	@echo "  Build Date: $(BUILD_DATE)"
	@echo "  Image: $(FULL_IMAGE)"